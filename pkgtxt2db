#!/usr/bin/env perl
#
# pkgtxt2db.pl
#
# copyright 2012 Frédéric Galusik <fredg~at~salixos~dot~org>
#
# License: BSD Revised
#
# Convert the Slackware/Salix PACKAGES.TXT file some various database
# formats : CSV, json, 
#

use strict;
use warnings;

use Getopt::Long;
use Pkgtxt2db::Pkgtxt2db;

my $VERSION = 0.1;

my $Pkgtxt2db = Pkgtxt2db->new();

#
# help - usage
#
sub usage {
    print "Usage: $0 [options]\n\n";
    print "Options:\n";
    print " -a | --asc32\t\tconvert Salix PACKAGES.TXT to a CSV DB\n";
    print " -b | --bsc64\t\tconvert Salix64 PACKAGES.TXT to a CSV DB\n";
    print " -c | --cslc32\t\tconvert Slackware PACKAGES.TXT to a CSV DB\n";
    print " -d | --dslc64\t\tconvert Slackware64 PACKAGES.TXT to a CSV DB\n";
    print "\n";
    print " -e | --esj32\t\tconvert Salix PACKAGES.TXT to a JSON DB\n";
    print " -f | --fsj64\t\tconvert Salix64 PACKAGES.TXT to a JSON DB\n";
    print " -g | --gslj32\t\tconvert Slackware PACKAGES.TXT to a JSON DB\n";
    print " -i | --islj64\t\tconvert Slackware64 PACKAGES.TXT to a JSON DB\n";
    print "\n"; 
    print " -h | --help\t\tprint this message\n";
    print " -v | --version\t\tprint pkgtxt2db version\n";
    exit 0;
}

#
# CLI options
#
my $version;
my $help;

my $salix32csv;
my $salix64csv;
my $slack32csv;
my $slack64csv;

my $salix32json;
my $salix64json;
my $slack32json;
my $slack64json;


GetOptions(
    'version'    =>  \$version,
    'help'       =>  \&usage,
    'asc32'      =>  \$salix32csv,
    'bsc64'      =>  \$salix64csv,
    'cslc32'     =>  \$slack32csv,
    'dslc64'     =>  \$slack64csv,
    'esj32'      =>  \$salix32json,
    'fsj64'      =>  \$salix64json,
    'gslj32'     =>  \$slack32json,
    'islj64'     =>  \$slack64json,
    );
if ($version) {
    print "Pkgtxt2db, version $VERSION\n";
    print "Copyright 2011-2012 Frédéric Galusik\n";
    print "http://www.salixos.org/wiki/index.php/Pkgtxt2db\n";
    exit 0;
    }
if ($salix32csv) {
    Pkgtxt2db->getsalix_d32();
    Pkgtxt2db->mkdasalixdb();
    Pkgtxt2db->salix2csv();
    exit 0;
    }
if ($salix64csv) {
    Pkgtxt2db->getsalix_d64();
    Pkgtxt2db->mkdasalixdb();
    Pkgtxt2db->salix2csv();
    exit 0;
    }
if ($slack32csv) {
    Pkgtxt2db->getslack_d32();
    Pkgtxt2db->mkdaslackdb();
    Pkgtxt2db->slack2csv();
    exit 0;
    }
if ($slack64csv) {
    Pkgtxt2db->getslack_d64();
    Pkgtxt2db->mkdaslackdb();
    Pkgtxt2db->slack2csv();
    exit 0;
    }
if ($salix32json) {
    Pkgtxt2db->getsalix_d32();
    Pkgtxt2db->mkdasalixdb();
    Pkgtxt2db->salix2json();
    exit 0;
    }
if ($salix64json) {
    Pkgtxt2db->getsalix_d64();
    Pkgtxt2db->mkdasalixdb();
    Pkgtxt2db->salix2json();
    exit 0;
    }
if ($slack32json) {
    Pkgtxt2db->getslack_d32();
    Pkgtxt2db->mkdaslackdb();
    Pkgtxt2db->slack2json();
    exit 0;
    }
if ($slack64json) {
    Pkgtxt2db->getslack_d64();
    Pkgtxt2db->mkdaslackdb();
    Pkgtxt2db->slack2json();
    exit 0;
    } 
else {
    die "Wrong usage, run pkgtxt2db --help for information.\n";
}  

